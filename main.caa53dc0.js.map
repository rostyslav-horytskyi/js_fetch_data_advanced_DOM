{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","request","url","fetch","then","response","json","getFirstReceivedDetails","Promise","race","map","phone","resolve","id","getAllSuccessfulDetails","allSettled","result","filter","status","value","getThreeFastestDetails","all","firstReceived","document","createElement","classList","add","insertAdjacentHTML","JSON","stringify","body","append","allSuccessful","ul","toUpperCase","threeFastest"],"mappings":"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","file":"main.caa53dc0.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst request = (url) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => response.json());\n};\n\nfunction getFirstReceivedDetails() {\n  return request('/phones.json')\n    .then(response => Promise.race(response.map(phone =>\n      new Promise(resolve =>\n        resolve(request(`/phones/${phone.id}.json`))\n      ))));\n}\n\nfunction getAllSuccessfulDetails() {\n  return request('/phones.json')\n    .then(response => Promise.allSettled(response.map(phone =>\n      new Promise(resolve =>\n        resolve(request(`/phones/${phone.id}.json`))\n      ))))\n    .then(result => result.filter(phone =>\n      phone.status === 'fulfilled').map(phone => phone.value));\n}\n\nfunction getThreeFastestDetails() {\n  return Promise.all([\n    getFirstReceivedDetails(),\n    getFirstReceivedDetails(),\n    getFirstReceivedDetails(),\n  ]);\n}\n\ngetFirstReceivedDetails()\n  .then(response => {\n    const firstReceived = document.createElement('div');\n\n    firstReceived.classList.add('first-received');\n\n    firstReceived.insertAdjacentHTML('beforeend', `\n      <h2>First Received</h2>\n      <ul>\n        <li>${JSON.stringify(response)}</li>\n      </ul>\n    `);\n\n    document.body.append(firstReceived);\n  });\n\ngetAllSuccessfulDetails()\n  .then(response => {\n    const allSuccessful = document.createElement('div');\n    const ul = document.createElement('ul');\n\n    allSuccessful.classList.add('all-successful');\n    allSuccessful.insertAdjacentHTML('beforeend', `<h2>All Successful</h2>`);\n\n    for (const phone of response) {\n      ul.insertAdjacentHTML('beforeend', `\n        <h3>${phone.id.toUpperCase()}</h3>\n        <li>\n          ${JSON.stringify(phone)}\n        </li>\n      `);\n\n      allSuccessful.append(ul);\n      document.body.append(allSuccessful);\n    }\n  });\n\ngetThreeFastestDetails()\n  .then(response => {\n    const threeFastest = document.createElement('div');\n    const ul = document.createElement('ul');\n\n    threeFastest.insertAdjacentHTML('beforeend', `<h2>Three Fastest</h2>`);\n\n    for (const phone of response) {\n      ul.insertAdjacentHTML('beforeend', `\n        <li>${JSON.stringify(phone)}</li>\n      `);\n    }\n\n    threeFastest.append(ul);\n  });\n"]}